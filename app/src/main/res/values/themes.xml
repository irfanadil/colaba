<resources xmlns:tools="http://schemas.android.com/tools">
    <!-- Base application theme. -->
    <style name="Theme.ColabaDemo" parent="Theme.MaterialComponents.Light.NoActionBar">
        <!-- Primary brand color. -->
        <item name="colorPrimary">@color/colaba_primary_color</item>
        <item name="colorPrimaryVariant">@color/colaba_primary_color</item>
        <item name="colorOnPrimary">@color/white</item>
        <!-- Secondary brand color. -->
        <item name="colorSecondary">@color/colaba_primary_color</item>
        <item name="colorSecondaryVariant">@color/colaba_primary_color</item>
        <item name="colorOnSecondary">@color/white</item>
        <!-- Status bar color. -->
        <item name="android:statusBarColor" tools:targetApi="l">?attr/colorPrimaryVariant</item>
        <item name="android:windowLightStatusBar">false</item>

        <item name="android:fontFamily">@font/rubik_regular</item>
        <item name="fontFamily">@font/rubik_regular</item>

        <!--
                <item name="colorControlNormal">@color/green_circle</item>
                <item name="colorControlActivated">@color/green_circle</item>
                 <item name="colorControlHighlight">@android:color/transparent</item>
        -->
        <!--
                 <item name="textInputStyle">@style/Widget.App.TextInputLayout</item>
                  <item name="textInputStyle">@style/Widget.App.TextInputLayout</item>
        -->
        <item name="textInputStyle">@style/Widget.App.TextInputLayout</item>
        <item name="colorSurface">#FFFFFF</item>


        <!-- For the resting Spinner style -->
        <item name="android:spinnerItemStyle">
            @style/spinnerItemStyle
        </item>

        <!-- For each individual Spinner list item once clicked on -->
        <item name="android:spinnerDropDownItemStyle">
            @style/spinnerDropDownItemStyle
        </item>

        <item name="android:buttonStyle">@style/NoShadowButton</item>

        </style>


    <style name="NoShadowButton" parent="android:style/Widget.Button"> <item name="android:stateListAnimator">@null</item> </style>

    <style name="spinnerItemStyle">

        <item name="android:textSize">14sp</item>
        <item name="android:textColor">@color/grey_color_one</item>
    </style>

    <style name="spinnerDropDownItemStyle">

        <item name="android:textSize">14sp</item>
        <item name="android:textColor">@color/grey_color_one</item>
    </style>


    <style name="Base.Widget.Design.TabLayout" parent="android:Widget">

        <item name="tabIndicatorColor">?attr/colorAccent</item>
        <item name="tabIndicatorHeight">4dp</item>
        <item name="tabPaddingStart">12dp</item>
        <item name="tabPaddingEnd">12dp</item>
        <!--
        <item name="tabMaxWidth">@dimen/tab_max_width</item>
        <item name="tabBackground">?attr/selectableItemBackground</item>
        <item name="tabTextAppearance">@style/TextAppearance.Design.Tab</item>
        <item name="tabSelectedTextColor">?android:textColorPrimary</item>
        -->
    </style>


    <style name="MineCustomTabText" parent="TextAppearance.Design.Tab">
        <item name="android:textSize">15sp</item>
        <item name="android:textColor">@color/grey_color_two</item>
        <item name="android:fontFamily">@font/rubik_regular</item>
        <item name="android:font">@font/rubik_regular</item>
        <item name="textAllCaps">false</item>
        <item name="android:textAllCaps">false</item>
    </style>


    <style name="loCustomTab" parent="TextAppearance.Design.Tab">
        <item name="android:textSize">13sp</item>
        <item name="android:textColor">@color/grey_color_two</item>
        <item name="android:fontFamily">@font/rubik_regular</item>
        <item name="android:font">@font/rubik_regular</item>
        <item name="textAllCaps">false</item>
        <item name="android:textAllCaps">false</item>
    </style>

    <style name="Widget.TabWidget" parent="android:Theme">
        <item name="android:tabStripEnabled">false</item>
    </style>

    <style name="Color1SwitchStyle">
        <item name="colorControlActivated">@color/colaba_apptheme_blue</item>
        <item name="colorAccent">@color/colaba_apptheme_blue</item>
        <item name="colorControlNormal">@color/colaba_apptheme_blue</item>
    </style>


    <style name="roundedBottomSheetDialog" parent="Theme.Design.Light.BottomSheetDialog">
        <item name="bottomSheetStyle">@style/RoundedBottomSheetStyle</item>
    </style>

    <style name="RoundedBottomSheetStyle" parent="Widget.Design.BottomSheet.Modal">
        <item name="android:background">@drawable/rounded_white_shape</item>
    </style>


    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Styling Material Fields.........

    <style name="Widget.App.TextInputLayout" parent="Widget.MaterialComponents.TextInputLayout.FilledBox">
        <item name="materialThemeOverlay">@style/ThemeOverlay.App.TextInputLayout</item>
        <item name="shapeAppearance">@style/ShapeAppearance.App.SmallComponent</item> //Changes the Shape Apperance
        <!--<item name="hintTextColor">?attr/colorOnSurface</item>-->   //When you added this line it will applies only one color in normal and activate state i.e colorOnSurface color
    </style>

    <style name="ThemeOverlay.App.TextInputLayout" parent="">
        <item name="colorPrimary">@color/colaba_primary_color</item>  //Activated color
        <item name="colorOnSurface">@color/grey_color_three</item>    //Normal color
        <item name="colorError">@color/colaba_red_color</item>        //Error color

        //Text Appearance styles
        <item name="textAppearanceSubtitle1">@style/TextAppearance.App.Subtitle1</item>
        <item name="textAppearanceCaption">@style/TextAppearance.App.Caption</item>

        <!--Note: When setting a materialThemeOverlay on a custom TextInputLayout style, don’t forget to set editTextStyle to either a @style/Widget.MaterialComponents.TextInputEditText.* style or to a custom one that inherits from that.
        The TextInputLayout styles set materialThemeOverlay that overrides editTextStyle with the specific TextInputEditText style needed. Therefore, you don’t need to specify a style tag on the edit text.-->
        <item name="editTextStyle">@style/Widget.MaterialComponents.TextInputEditText.FilledBox</item>
    </style>

    <style name="TextAppearance.App.Subtitle1" parent="TextAppearance.MaterialComponents.Subtitle1">
        <item name="android:textSize">15sp</item>
        <item name="android:textColor">@color/grey_color_three</item>
        <item name="fontFamily">@font/rubik_regular</item>
        <item name="android:fontFamily">@font/rubik_regular</item>
    </style>

    <style name="TextAppearance.App.Caption" parent="TextAppearance.MaterialComponents.Caption">
        <item name="android:textSize">13sp</item>
        <item name="android:textColor">@color/grey_color_two</item>
        <item name="fontFamily">@font/rubik_regular</item>
        <item name="android:fontFamily">@font/rubik_regular</item>
    </style>

    <style name="ShapeAppearance.App.SmallComponent" parent="ShapeAppearance.MaterialComponents.SmallComponent">
        <item name="cornerFamily">cut</item>
        <item name="cornerSize">4dp</item>
    </style>


    <style name="error_appearance" parent="@android:style/TextAppearance">
        <item name="android:textColor">@color/filter_yellow</item>
        <item name="android:textSize">12sp</item>
        <item name="colorControlActivated">@color/green_circle</item>    //Floating label color

    </style>

    <style name="InputText_Overlay" parent="android:Theme">
        <item name="colorPrimary">@color/grey_color_two</item>
        <item name="android:textSize">13sp</item>
        <item name="android:state_selected">@color/grey_color_two</item>

    </style>


    <style name="CheckBox" parent="Widget.AppCompat.CompoundButton.CheckBox">
        <item name="colorControlNormal">@drawable/checkbox_unchecked</item><!-- border color -->
        <item name="colorControlActivated">@drawable/checkbox_checked</item> <!-- fill color -->
        <item name="colorControlHighlight">@drawable/checkbox_checked</item> <!-- animation color -->
    </style>


    <style name="inputError" parent="@android:style/TextAppearance">
        <item name="android:textColor">@color/colaba_red_color</item>
        <item name="android:textSize">12sp</item>
        <item name="android:fontFamily">@font/rubik_regular</item>
        <item name="android:font">@font/rubik_regular</item>
    </style>

</resources>